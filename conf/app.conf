#Reflow App config

package.folders = conf, public, app/views

app.name = reflow

# A secret string which is passed to cryptographically sign the cookie to prevent
# (and detect) user modification.
# Keep this string secret or users will be able to inject arbitrary cookie values
# into your application
app.secret = WHGedFhWNA5dqD4HhUV1YdUbNz7qBxsHbB2bBh3Clj8FJUPn9785qlNOXZvFjPYU

# Revel running behind proxy like nginx, haproxy, etc.
app.behind.proxy = false

# The IP address on which to listen.
http.addr =
# The port on which to listen.
http.port = 9000

# Whether to use SSL or not.
http.ssl = false
# Path to an X509 certificate file, if using SSL.
#http.sslcert =
# Path to an X509 certificate key, if using SSL.
#http.sslkey =


http.timeout.read = 90
http.timeout.write = 60
cookie.prefix = Reflow
session.expires = 720h


# The date format used by Revel. Possible formats defined by the Go `time`
# package (http://golang.org/pkg/time/#Parse)
format.date     = 2006-01-02
format.datetime = 2006-01-02 15:04

# Determines whether the template rendering should use chunked encoding.
# Chunked encoding can decrease the time to first byte on the client side by
# sending data before the entire template has been fully rendered.
results.chunked = false

# HTTP Compression
results.compressed = false

i18n.default_language = en

module.static = github.com/revel/modules/static



# Development mode config
[dev]

mode.dev = true
# Pretty Printing for JSON results
results.pretty = true
# Auto Rebuild
watch = true
watch.mode = eager
# Module testing things
module.testrunner = github.com/revel/modules/testrunner
# Logging
log.all.filter.module.app = stdout    # Log all loggers for the application to the stdout
log.error.nfilter.module.app = stderr # Everything else that logs an error to stderr
log.crit.output = stderr              # Everything that logs something as critical goes to this
log.request.output = stdout


# Production settings
[prod]

mode.dev = false
results.pretty = false
watch = false
module.testrunner =
log.warn.output  = log/%(app.name)s-warn.json    # Log all warn messages to file
log.error.output = log/%(app.name)s-error.json   # Log all errors to file
log.crit.output = log/%(app.name)s-critical.json # Log all critical to file
log.request.output = log/%(app.name)s-requests.json
